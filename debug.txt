{
	"name"
 "AnalysisException",
	"message"
 "Table or view not found
 employee; line 1 pos 88;\n'Aggregate ['employee.dept_no, 'department.dept_name], ['count('employee.emp_no) AS total_emp#788, 'employee.dept_no, 'department.dept_name]\n+- 'Join Inner, ('department.dept_no = 'employee.dept_no)\n   
- 'UnresolvedRelation [employee], [], false\n   +- SubqueryAlias department\n      +- View (`department`, [dept_no#62,dept_name#63])\n         +- Project [dept_no#62, dept_name#63]\n            +- Relation [dept_no#62,dept_name#63] JDBCRelation(employees.departments) [numPartitions=1]\n",
	"stack"
 "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n\u001b[0;31mAnalysisException\u001b[0m                         Traceback (most recent call last)\nCell \u001b[0;32mIn[34], line 2\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[39m# Number of employees in each department\u001b[39;00m\n\u001b[0;32m----> 2\u001b[0m spark\u001b[39m.\u001b[39;49msql(\n\u001b[1;32m      3\u001b[0m     \u001b[39m\"\u001b[39;49m\u001b[39mselect count(employee.emp_no) as total_emp, employee.dept_no, department.dept_name\u001b[39;49m\u001b[39m\"\u001b[39;49m\n\u001b[1;32m      4\u001b[0m     \u001b[39m+\u001b[39;49m \u001b[39m\"\u001b[39;49m\u001b[39m from employee join department on department.dept_no = employee.dept_no\u001b[39;49m\u001b[39m\"\u001b[39;49m\n\u001b[1;32m      5\u001b[0m     \u001b[39m+\u001b[39;49m \u001b[39m\"\u001b[39;49m\u001b[39m group by employee.dept_no, department.dept_name;\u001b[39;49m\u001b[39m\"\u001b[39;49m\n\u001b[1;32m      6\u001b[0m )\u001b[39m.\u001b[39mshow()\n\nFile \u001b[0;32m~/anaconda3/envs/BDA2023/lib/python3.10/site-packages/pyspark/sql/session.py
1034\u001b[0m, in \u001b[0;36mSparkSession.sql\u001b[0;34m(self, sqlQuery, **kwargs)\u001b[0m\n\u001b[1;32m   1032\u001b[0m     sqlQuery \u001b[39m=\u001b[39m formatter\u001b[39m.\u001b[39mformat(sqlQuery, \u001b[39m*\u001b[39m\u001b[39m*\u001b[39mkwargs)\n\u001b[1;32m   1033\u001b[0m \u001b[39mtry\u001b[39;00m
\n\u001b[0;32m-> 1034\u001b[0m     \u001b[39mreturn\u001b[39;00m DataFrame(\u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49m_jsparkSession\u001b[39m.\u001b[39;49msql(sqlQuery), \u001b[39mself\u001b[39m)\n\u001b[1;32m   1035\u001b[0m \u001b[39mfinally\u001b[39;00m
\n\u001b[1;32m   1036\u001b[0m     \u001b[39mif\u001b[39;00m \u001b[39mlen\u001b[39m(kwargs) \u001b[39m>\u001b[39m \u001b[39m0\u001b[39m
\n\nFile \u001b[0;32m~/anaconda3/envs/BDA2023/lib/python3.10/site-packages/py4j/java_gateway.py
1321\u001b[0m, in \u001b[0;36mJavaMember.__call__\u001b[0;34m(self, *args)\u001b[0m\n\u001b[1;32m   1315\u001b[0m command \u001b[39m=\u001b[39m proto\u001b[39m.\u001b[39mCALL_COMMAND_NAME \u001b[39m+\u001b[39m\\\n\u001b[1;32m   1316\u001b[0m     \u001b[39mself\u001b[39m\u001b[39m.\u001b[39mcommand_header \u001b[39m+\u001b[39m\\\n\u001b[1;32m   1317\u001b[0m     args_command \u001b[39m+\u001b[39m\\\n\u001b[1;32m   1318\u001b[0m     proto\u001b[39m.\u001b[39mEND_COMMAND_PART\n\u001b[1;32m   1320\u001b[0m answer \u001b[39m=\u001b[39m \u001b[39mself\u001b[39m\u001b[39m.\u001b[39mgateway_client\u001b[39m.\u001b[39msend_command(command)\n\u001b[0;32m-> 1321\u001b[0m return_value \u001b[39m=\u001b[39m get_return_value(\n\u001b[1;32m   1322\u001b[0m     answer, \u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49mgateway_client, \u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49mtarget_id, \u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49mname)\n\u001b[1;32m   1324\u001b[0m \u001b[39mfor\u001b[39;00m temp_arg \u001b[39min\u001b[39;00m temp_args
\n\u001b[1;32m   1325\u001b[0m     temp_arg\u001b[39m.\u001b[39m_detach()\n\nFile \u001b[0;32m~/anaconda3/envs/BDA2023/lib/python3.10/site-packages/pyspark/sql/utils.py
196\u001b[0m, in \u001b[0;36mcapture_sql_exception.<locals>.deco\u001b[0;34m(*a, **kw)\u001b[0m\n\u001b[1;32m    192\u001b[0m converted \u001b[39m=\u001b[39m convert_exception(e\u001b[39m.\u001b[39mjava_exception)\n\u001b[1;32m    193\u001b[0m \u001b[39mif\u001b[39;00m \u001b[39mnot\u001b[39;00m \u001b[39misinstance\u001b[39m(converted, UnknownException)
\n\u001b[1;32m    194\u001b[0m     \u001b[39m# Hide where the exception came from that shows a non-Pythonic\u001b[39;00m\n\u001b[1;32m    195\u001b[0m     \u001b[39m# JVM exception message.\u001b[39;00m\n\u001b[0;32m--> 196\u001b[0m     \u001b[39mraise\u001b[39;00m converted \u001b[39mfrom\u001b[39;00m \u001b[39mNone\u001b[39m\n\u001b[1;32m    197\u001b[0m \u001b[39melse\u001b[39;00m
\n\u001b[1;32m    198\u001b[0m     \u001b[39mraise\u001b[39;00m\n\n\u001b[0;31mAnalysisException\u001b[0m
 Table or view not found
 employee; line 1 pos 88;\n'Aggregate ['employee.dept_no, 'department.dept_name], ['count('employee.emp_no) AS total_emp#788, 'employee.dept_no, 'department.dept_name]\n+- 'Join Inner, ('department.dept_no = 'employee.dept_no)\n   
- 'UnresolvedRelation [employee], [], false\n   +- SubqueryAlias department\n      +- View (`department`, [dept_no#62,dept_name#63])\n         +- Project [dept_no#62, dept_name#63]\n            +- Relation [dept_no#62,dept_name#63] JDBCRelation(employees.departments) [numPartitions=1]\n"
}